From 7587f6867ae40da2f8415725ce16e8b0f2190964 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Daniel=20Est=C3=A9vez?= <daniel@destevez.net>
Date: Wed, 2 Nov 2022 14:15:50 +0100
Subject: [PATCH] arch: arm: export Zynq cache invalidation functions
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This is needed for the Maia SDR kernel module, which calls
these functions directly rather than going through the DMA API.

Signed-off-by: Daniel Est√©vez <daniel@destevez.net>
---
 arch/arm/mm/Makefile          |  2 ++
 arch/arm/mm/cache-v7-export.c | 14 ++++++++++++++
 arch/arm/mm/cache-v7.S        |  2 +-
 arch/arm/mm/outercache.c      | 17 +++++++++++++++++
 4 files changed, 34 insertions(+), 1 deletion(-)
 create mode 100644 arch/arm/mm/cache-v7-export.c
 create mode 100644 arch/arm/mm/outercache.c

diff --git a/arch/arm/mm/Makefile b/arch/arm/mm/Makefile
index 3510503bc5e688..aa45536f086ed5 100644
--- a/arch/arm/mm/Makefile
+++ b/arch/arm/mm/Makefile
@@ -5,6 +5,7 @@
 
 obj-y				:= extable.o fault.o init.o iomap.o
 obj-y				+= dma-mapping$(MMUEXT).o
+obj-y				+= outercache.o
 obj-$(CONFIG_MMU)		+= fault-armv.o flush.o idmap.o ioremap.o \
 				   mmap.o pgd.o mmu.o pageattr.o
 KASAN_SANITIZE_mmu.o		:= n
@@ -45,6 +46,7 @@ obj-$(CONFIG_CPU_CACHE_V4WT)	+= cache-v4wt.o
 obj-$(CONFIG_CPU_CACHE_V4WB)	+= cache-v4wb.o
 obj-$(CONFIG_CPU_CACHE_V6)	+= cache-v6.o
 obj-$(CONFIG_CPU_CACHE_V7)	+= cache-v7.o
+obj-$(CONFIG_CPU_CACHE_V7)	+= cache-v7-export.o
 obj-$(CONFIG_CPU_CACHE_FA)	+= cache-fa.o
 obj-$(CONFIG_CPU_CACHE_NOP)	+= cache-nop.o
 obj-$(CONFIG_CPU_CACHE_V7M)	+= cache-v7m.o
diff --git a/arch/arm/mm/cache-v7-export.c b/arch/arm/mm/cache-v7-export.c
new file mode 100644
index 00000000000000..6ff6e58c43405e
--- /dev/null
+++ b/arch/arm/mm/cache-v7-export.c
@@ -0,0 +1,14 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
+/*
+ *  linux/arch/arm/mm/cache-v7-export.c
+ *
+ *  Copyright (C) 2022 Daniel Estevez <daniel@destevez.net>
+ *
+ */
+
+#include <linux/export.h>
+
+// implemented in cache-v7.S
+extern void v7_dma_inv_range(unsigned long start, unsigned long end);
+
+EXPORT_SYMBOL(v7_dma_inv_range);
diff --git a/arch/arm/mm/cache-v7.S b/arch/arm/mm/cache-v7.S
index 830bbfb26ca561..5b6f5d37fc6c5e 100644
--- a/arch/arm/mm/cache-v7.S
+++ b/arch/arm/mm/cache-v7.S
@@ -363,7 +363,7 @@ ENDPROC(v7_flush_kern_dcache_area)
  *	- start   - virtual start address of region
  *	- end     - virtual end address of region
  */
-v7_dma_inv_range:
+ENTRY(v7_dma_inv_range)
 	dcache_line_size r2, r3
 	sub	r3, r2, #1
 	tst	r0, r3
diff --git a/arch/arm/mm/outercache.c b/arch/arm/mm/outercache.c
new file mode 100644
index 00000000000000..d4b16005764f61
--- /dev/null
+++ b/arch/arm/mm/outercache.c
@@ -0,0 +1,17 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
+/*
+ * arch/arm/mm/outercache.c
+ *
+ * Copyright (C) 2022 Daniel Estevez <daniel@destevez.net>
+ */
+
+#include <linux/export.h>
+#include <linux/types.h>
+#include <asm/outercache.h>
+
+void arm_cache_outer_inv_range(phys_addr_t start, phys_addr_t end)
+{
+	outer_inv_range(start, end);
+}
+
+EXPORT_SYMBOL(arm_cache_outer_inv_range);
